// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/task-controller.go

// Package controllers_mocks is a generated GoMock package.
package controllers_mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockITaskController is a mock of ITaskController interface.
type MockITaskController struct {
	ctrl     *gomock.Controller
	recorder *MockITaskControllerMockRecorder
}

// MockITaskControllerMockRecorder is the mock recorder for MockITaskController.
type MockITaskControllerMockRecorder struct {
	mock *MockITaskController
}

// NewMockITaskController creates a new mock instance.
func NewMockITaskController(ctrl *gomock.Controller) *MockITaskController {
	mock := &MockITaskController{ctrl: ctrl}
	mock.recorder = &MockITaskControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITaskController) EXPECT() *MockITaskControllerMockRecorder {
	return m.recorder
}

// CreateTask mocks base method.
func (m *MockITaskController) CreateTask(context *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateTask", context)
}

// CreateTask indicates an expected call of CreateTask.
func (mr *MockITaskControllerMockRecorder) CreateTask(context interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTask", reflect.TypeOf((*MockITaskController)(nil).CreateTask), context)
}

// GetAllTask mocks base method.
func (m *MockITaskController) GetAllTask(context *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetAllTask", context)
}

// GetAllTask indicates an expected call of GetAllTask.
func (mr *MockITaskControllerMockRecorder) GetAllTask(context interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTask", reflect.TypeOf((*MockITaskController)(nil).GetAllTask), context)
}
