// Code generated by MockGen. DO NOT EDIT.
// Source: services/task-service.go

// Package services_mocks is a generated GoMock package.
package services_mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/manabie-com/togo/entities"
)

// MockITaskService is a mock of ITaskService interface.
type MockITaskService struct {
	ctrl     *gomock.Controller
	recorder *MockITaskServiceMockRecorder
}

// MockITaskServiceMockRecorder is the mock recorder for MockITaskService.
type MockITaskServiceMockRecorder struct {
	mock *MockITaskService
}

// NewMockITaskService creates a new mock instance.
func NewMockITaskService(ctrl *gomock.Controller) *MockITaskService {
	mock := &MockITaskService{ctrl: ctrl}
	mock.recorder = &MockITaskServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITaskService) EXPECT() *MockITaskServiceMockRecorder {
	return m.recorder
}

// CreateTask mocks base method.
func (m *MockITaskService) CreateTask(task *entities.Task) (error, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTask", task)
	ret0, _ := ret[0].(error)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTask indicates an expected call of CreateTask.
func (mr *MockITaskServiceMockRecorder) CreateTask(task interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTask", reflect.TypeOf((*MockITaskService)(nil).CreateTask), task)
}

// GetAllTask mocks base method.
func (m *MockITaskService) GetAllTask() ([]entities.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTask")
	ret0, _ := ret[0].([]entities.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTask indicates an expected call of GetAllTask.
func (mr *MockITaskServiceMockRecorder) GetAllTask() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTask", reflect.TypeOf((*MockITaskService)(nil).GetAllTask))
}
